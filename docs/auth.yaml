# docs https://swagger.io/docs/specification/2-0/
swagger: '2.0'
info:
  version: "0.0.1"
  title: Auth Service
  description: Auth service.
schemes:
  - http
  - https
host: localhost:8080
basePath: /auth
produces:
  - application/json
consumes:
  - application/json
paths:
  /register:
    post:
      operationId: postRegister
      parameters:
        - in: body
          name: payload
          schema:
            $ref: '#/definitions/PostRegister'
      responses:
        '200':
          description: Show all list products
          schema:
            type: object
  /login:
    post:
      operationId: postLogin
      parameters:
        - in: body
          name: payload
          schema:
            $ref: '#/definitions/PostLogin'
      responses:
        '200':
          description: OK
  /password/reset:
    post:
      operationId: postPasswordReset
      parameters:
        - in: body
          name: payload
          schema:
            $ref: '#/definitions/PostPasswordReset'
      responses:
        '200':
          description: OK
  /password/change:
    post:
      operationId: postPasswordChange
      parameters:
        - in: body
          name: payload
          schema:
            $ref: '#/definitions/PostPasswordChange'
      responses:
        '200':
          description: OK
  /activate:
    post:
      operationId: postActivate
      parameters:
        - in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/PostActivate'
      responses:
        '200':
          description: OK

definitions:
  HttpError:
    type: object
    required:
      - status
      - type
      - title
    properties:
      detail:
        description: "More detailed, human-readable, optional explanation of the error"
        type: string
        example: User is lacking permission to access this resource
      status:
        description: HTTP status code returned for the error
        type: integer
        maximum: 599
        minimum: 100
        x-go-name: Code
        example: 403
      title:
        description: "Short, human-readable description of the error"
        type: string
        example: Forbidden
      type:
        description: "Type of error returned, should be used for client-side error handling"
        type: string
        example: generic

  HttpValidationError:
    allOf:
      - $ref: "#/definitions/HttpError"
    type: object
    required:
      - validationErrors
    properties:
      validationErrors:
        description: List of errors received while validating payload against schema
        type: array
        items:
          $ref: "#/definitions/HttpValidationErrorDetail"

  HttpValidationErrorDetail:
    type: object
    required:
      - key
      - in
      - error
    properties:
      error:
        description: Error describing field validation failure
        type: string
      in:
        description: Indicates how the invalid field was provided
        type: string
      key:
        description: Key of field failing validation
        type: string
  PostLogin:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
        format: password
  PostRegister:
    type: object
    required:
      - username
      - email
      - password
    properties:
      username:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
        format: password
  PostPasswordReset:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        format: email
  PostPasswordChange:
    type: object
    required:
      - token
      - password
      - new_password
      - new_password_confirm
    properties:
      token:
        type: string
        format: uuid
      password:
        type: string
      new_password:
        type: string
      new_password_confirm:
        type: string
  PostActivate:
    type: object
    required:
      - token
    properties:
      token:
        type: string
        format: uuid
